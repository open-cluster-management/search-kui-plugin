// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Queries should DELETE_QUERY 1`] = `
Object {
  "operationName": "deleteSearch",
  "query": "mutation deleteSearch($resource: JSON!) {
 deleteSearch(resource: $resource)
}
",
  "variables": Object {
    "resource": Object {
      "name": "nginx",
    },
  },
}
`;

exports[`Search Queries should DELETE_RESOURCE 1`] = `
Object {
  "operationName": "deleteResource",
  "query": "mutation deleteResource($apiVersion: String, $name: String, $namespace: String, $cluster: String, $kind: String, $childResources: JSON) {
  deleteResource(apiVersion: $apiVersion, name: $name, namespace: $namespace, cluster: $cluster, kind: $kind, childResources: $childResources)
}
",
  "variables": Object {
    "cluster": "local-cluster",
    "kind": "Pod",
    "name": "nginx",
    "namespace": "kube-system",
    "apiVersion": "v1",
  },
}
`;

exports[`Search Queries should GET_SEARCH_COMPLETE 1`] = `
Object {
  "operationName": "searchComplete",
  "query": "query searchComplete($property: String!, $query: SearchInput) {
  searchComplete(property: $property, query: $query)
 }",
  "variables": Object {
    "property": "pod",
    "query": Object {
      "filters": Array [
        Object {
          "property": "kind",
          "value": "pod",
        },
      ],
      "keywords": Array [],
    },
  },
}
`;

exports[`Search Queries should GET_SEARCH_SCHEMA 1`] = `
Object {
  "operationName": "searchSchema",
  "query": "query searchSchema {
  searchSchema
  }",
  "variables": Object {},
}
`;

exports[`Search Queries should RESOURCE_LOGS 1`] = `
Object {
  "operationName": "getLogs",
  "query": "query getLogs($containerName: String!, $podName: String!, $podNamespace: String!, $clusterName: String!) {
  logs(containerName: $containerName, podName: $podName, podNamespace: $podNamespace, clusterName: $clusterName)
}
",
  "variables": Object {
    "clusterName": "local-cluster",
    "containerName": Array [
      "fake-container",
    ],
    "podName": "nginx",
    "podNamespace": "kube-system",
  },
}
`;

exports[`Search Queries should SAVE_SEARCH query - All deployments 1`] = `
Object {
  "operationName": "saveSearch",
  "query": "mutation saveSearch($resource: JSON!) {
  saveSearch(resource: $resource)
}
",
  "variables": Object {
    "resource": Object {
      "description": "All deployments",
      "id": "1573570796793",
      "name": "All deployments",
      "searchText": "kind:deployments",
    },
  },
}
`;

exports[`Search Queries should SAVE_SEARCH query - All pods 1`] = `
Object {
  "operationName": "saveSearch",
  "query": "mutation saveSearch($resource: JSON!) {
  saveSearch(resource: $resource)
}
",
  "variables": Object {
    "resource": Object {
      "description": "All pods",
      "id": "1573570796760",
      "name": "All pods",
      "searchText": "kind:pod",
    },
  },
}
`;

exports[`Search Queries should SAVED_SEARCH_QUERY 1`] = `
Object {
  "operationName": "savedSearches",
  "query": "query savedSearches {
  items: savedSearches {
    id
    name
    description
    searchText
    __typename
  }
}
",
  "variables": Object {},
}
`;

exports[`Search Queries should SEARCH_ACM_QUERY 1`] = `
Object {
  "operationName": "getResource",
  "query": "query getResource($kind: String, $name: String, $namespace: String, $cluster: String, $apiVersion: String) {
  getResource(kind: $kind, name: $name, namespace: $namespace, cluster: $cluster, apiVersion: $apiVersion)
}
",
  "variables": Object {
    "cluster": "local-cluster",
    "kind": "Pod",
    "name": "nginx",
    "namespace": "kube-system",
    "apiVersion": "v1",
  },
}
`;

exports[`Search Queries should SEARCH_QUERY 1`] = `
Object {
  "operationName": "searchResult",
  "query": "query searchResult($input: [SearchInput]) {
  searchResult: search(input: $input) {
    items
    __typename
  }
}
",
  "variables": Object {
    "input": Array [
      Object {
        "filters": Array [
          Object {
            "property": "kind",
            "value": "pod",
          },
        ],
        "keywords": Array [],
      },
    ],
  },
}
`;

exports[`Search Queries should SEARCH_QUERY_COUNT 1`] = `
Object {
  "operationName": "searchResult",
  "query": "query searchResult($input: [SearchInput]) {
  searchResult: search(input: $input) {
    count
    __typename
  }
}
",
  "variables": Object {
    "input": Object {
      "filters": Array [
        Object {
          "property": "kind",
          "value": "pod",
        },
      ],
      "keywords": Array [],
    },
  },
}
`;

exports[`Search Queries should SEARCH_RELATED_QUERY 1`] = `
Object {
  "operationName": "searchResult",
  "query": "query searchResult($input: [SearchInput]) {
  searchResult: search(input: $input) {
    items
    related {
      kind
      items
      __typename
    }
    __typename
  }
}
",
  "variables": Object {
    "input": Array [
      Object {
        "filters": Array [
          Object {
            "property": "kind",
            "value": "pod",
          },
        ],
        "keywords": Array [],
      },
    ],
  },
}
`;

exports[`Search Queries should UPDATE_RESOURCE 1`] = `
Object {
  "operationName": "updateResource",
  "query": "query updateResource($apiVersion: String, $namespace: String, $kind: String, $name: String, $body: JSON, $cluster: String) {
  updateResource(apiVersion: $apiVersion, namespace: $namespace, kind: $kind, name: $name, body: $body, cluster: $cluster)
}
",
  "variables": Object {
    "body": Object {
      "apiVersion": "apps/v1",
      "cluster": "local-cluster",
      "kind": "Deployment",
      "metadata": Object {
        "labels": Object {
          "app": "drone-app",
        },
        "name": "myapp",
        "namespace": "kube-system",
      },
      "name": "myapp",
      "namespace": "kube-system",
      "spec": Object {
        "replicas": 1,
        "selector": Object {
          "matchLabels": Object {
            "app": "drone-app",
          },
        },
        "template": Object {
          "metadata": Object {
            "labels": Object {
              "app": "drone-app",
            },
          },
          "spec": Object {
            "affinity": Object {
              "podAntiAffinity": Object {
                "requiredDuringSchedulingIgnoredDuringExecution": Array [
                  Object {
                    "labelSelector": Object {
                      "matchExpressions": Array [
                        Object {
                          "key": "app",
                          "operator": "In",
                          "values": Array [
                            "drone-app",
                          ],
                        },
                      ],
                    },
                    "topologyKey": "kubernetes.io/hostname",
                  },
                ],
              },
            },
            "containers": Array [
              Object {
                "image": "rvennam/drone-app:latest",
                "name": "drone-app",
                "ports": Array [
                  Object {
                    "containerPort": 3000,
                  },
                ],
                "resources": Object {
                  "limits": Object {
                    "cpu": "100m",
                    "memory": "128Mi",
                  },
                  "requests": Object {
                    "cpu": "50m",
                    "memory": "64Mi",
                  },
                },
              },
            ],
            "terminationGracePeriodSeconds": 0,
          },
        },
      },
    },
    "cluster": "local-cluster",
    "kind": "Deployment",
    "name": "myapp",
    "namespace": "kube-system",
  },
}
`;
